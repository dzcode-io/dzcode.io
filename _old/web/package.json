{
  "name": "@dzcode.io/web",
  "description": "www.dzcode.io code",
  "version": "5.3.6",
  "author": {
    "email": "contact@zakiii.com",
    "name": "Zakaria Mansouri",
    "url": "https://www.zakiii.com"
  },
  "dependencies": {
    "@babel/runtime": "^7.16.3",
    "@dzcode.io/api": "*",
    "@dzcode.io/data": "*",
    "@dzcode.io/models": "*",
    "@dzcode.io/ui": "*",
    "@dzcode.io/utils": "*",
    "@n8tb1t/use-scroll-position": "^2.0.3",
    "@reduxjs/toolkit": "^1.8.5",
    "@sentry/browser": "^7.46.0",
    "@sentry/react": "^7.46.0",
    "@sentry/tracing": "^7.46.0",
    "immutable": "^4.1.0",
    "l2t": "^1.1.0",
    "markdown-to-jsx": "^7.1.0",
    "react": "^18.0.1",
    "react-dom": "^18.2.0",
    "react-helmet": "^6.1.0",
    "react-redux": "^7.2.6",
    "react-router-dom": "^5.2.0",
    "react-spring": "^8.0.27",
    "react-syntax-highlighter": "^15.4.3",
    "web-vitals": "^2.1.4"
  },
  "devDependencies": {
    "@craco/craco": "^7.1.0",
    "@craco/types": "^7.1.0",
    "@dzcode.io/tooling": "*",
    "@testing-library/react": "^14.0.0",
    "@types/fs-extra": "^9.0.13",
    "@types/glob": "^7.1.4",
    "@types/markdown-to-jsx": "^6.11.3",
    "@types/mini-css-extract-plugin": "^2.0.1",
    "@types/react": "^17.0.0",
    "@types/react-dom": "^17.0.0",
    "@types/react-helmet": "^6.1.5",
    "@types/react-redux": "^7.1.20",
    "@types/react-router-dom": "^5.1.6",
    "@types/react-syntax-highlighter": "^13.5.0",
    "@types/redux": "^3.6.0",
    "@types/redux-thunk": "^2.1.0",
    "@types/webpack-bundle-analyzer": "^4.4.2",
    "babel-plugin-typescript-to-proptypes": "^1.4.2",
    "cpx": "^1.5.0",
    "cypress": "^12.8.1",
    "firebase-tools": "^9.1.0",
    "fs-extra": "^10.0.0",
    "glob": "^7.1.6",
    "html-webpack-plugin": "^5.5.0",
    "react-scripts": "5.0.1",
    "robotstxt-webpack-plugin": "^8.0.0",
    "sass": "^1.30.0",
    "sitemap": "^7.1.1",
    "wait-on": "^7.0.1",
    "webpack-bundle-analyzer": "^4.6.1"
  },
  "engines": {
    "node": ">=16",
    "yarn": ">=1.4.2"
  },
  "license": "MIT",
  "lint-staged": {
    "*.*": [
      "yarn lint:eslint --fix",
      "yarn lint:prettier --write"
    ]
  },
  "private": true,
  "repository": {
    "type": "git",
    "repository": "https://github.com/dzcode-io/dzcode.io.git"
  },
  "scripts": {
    "build": "lerna run build:alone --scope=@dzcode.io/web --include-dependencies --stream",
    "build:watch": "lerna run build:alone:watch --scope=@dzcode.io/web --include-dependencies --parallel",
    "bundle": "yarn build && yarn bundle:alone",
    "bundle:alone": "cross-env TS_NODE_SKIP_PROJECT=true NODE_ENV=production craco build",
    "bundle:analyze": "yarn clean && cross-env ANALYZE=true yarn bundle",
    "clean": "lerna run clean:alone --scope=@dzcode.io/web --include-dependencies --stream",
    "clean:alone": "rimraf dist coverage bundle node_modules/.cache",
    "deploy": "yarn generate:sitemap && rimraf ./firebase/public && cpx -u \"./bundle/**/*\" ./firebase/public && cd ./firebase && firebase deploy --only hosting:dzcode.io --token \"$FIREBASE_TOKEN\"",
    "deploy:stg": "yarn generate:sitemap && rimraf ./firebase/public && cpx -u \"./bundle/**/*\" ./firebase/public && cd ./firebase && firebase deploy --only hosting:stage.dzcode.io --token \"$FIREBASE_TOKEN\"",
    "e2e:dev": "yarn wait-on http://localhost:8080/ && yarn cypress open",
    "generate:bundle-info": "ts-node ../packages/tooling/bundle-info.ts",
    "generate:sentry-release": "ts-node ../packages/tooling/sentry-release.ts web bundle",
    "generate:sitemap": "cross-env TS_NODE_SKIP_PROJECT=true ts-node src/build/sitemap.ts",
    "lint": "yarn build && yarn lint:alone",
    "lint:alone": "yarn lint:eslint . && yarn lint:prettier --check . && yarn lint:tsc && yarn lint:ts-prune",
    "lint:eslint": "eslint --config ../packages/tooling/.eslintrc.json --ignore-path ../packages/tooling/.eslintignore --report-unused-disable-directives",
    "lint:fix": "yarn build && yarn lint:fix:alone",
    "lint:fix:alone": "yarn lint:eslint --fix . && yarn lint:prettier --write .",
    "lint:prettier": "prettier  --config ../packages/tooling/.prettierrc --ignore-path ../packages/tooling/.prettierignore --loglevel warn",
    "lint:ts-prune": "ts-node ../packages/tooling/setup-ts-prune.ts && ts-prune --error",
    "lint:tsc": "tsc --noEmit",
    "start:dev": "craco start",
    "test": "yarn build && yarn test:alone",
    "test:alone": "craco test --watchAll=false",
    "test:watch": "npm-run-all build --parallel build:watch \"test:alone --watch {@}\" --"
  }
}
